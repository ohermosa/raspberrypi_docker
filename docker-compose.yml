version: "3.7"

# Touch (create empty files) traefik.log and acme.json. Set acme.json permissions to 600.
# touch ./acme.json ./traefik.log
# chmod 600 ./acme.json

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    networks:
      - traefik_proxy
      - internal
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--api"
      - "--log.level=INFO"
      - "--global.sendAnonymousUsage=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/rules"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.letsencrypt.acme.email=$MY_EMAIL"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--serverstransport.insecureSkipVerify=true"
      - "--accesslog=true"
      - "--accessLog.filePath=/traefik.log"
      - "--pilot.token=$TRAEFIK_PILOT_TOKEN"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`$TRAEFIK_DOMAIN`)"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.tls.options=default"
      - "traefik.http.routers.traefik.middlewares=auth,securityheaders"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.auth.basicauth.users=$TRAEFIK_CREDS"
      - "traefik.http.middlewares.sslredirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.securityheaders.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.securityheaders.headers.stsPreload=true"
      - "traefik.http.middlewares.securityheaders.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.securityheaders.headers.stsIncludeSubdomains=true"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=sslredirect"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json # cert location - you must touch this file and change permissions to 600
      - ./rules:/rules
      - ./traefik.log:/traefik.log

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    restart: unless-stopped
    networks:
      - traefik_proxy
      - internal
    expose:
      - 9091
      - 51413
      - 51413/udp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
      - TRANSMISSION_WEB_HOME=/kettu/
      - USER=$TRANSMISSION_USER
      - PASS=$TRANSMISSION_PASS
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`$TRANSMISSION_DOMAIN`)"
      - "traefik.http.routers.transmission.entrypoints=https"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.routers.transmission.tls.options=default"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"
      - "traefik.http.routers.transmission.middlewares=securityheaders"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - /datos/downloads:/downloads

  nginx:
    image: nginx:1.19.3-alpine
    container_name: nginx
    restart: unless-stopped
    networks:
      - traefik_proxy
      - internal
    expose:
      - 81
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`$NGINX_DOMAIN`)"
      - "traefik.http.routers.nginx.entrypoints=https"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.options=default"
      - "traefik.http.routers.nginx.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nginx.middlewares=securityheaders"
      - "traefik.http.routers.nginx.middlewares=authvlc"
      - "traefik.http.middlewares.authvlc.basicauth.users=$NGINX_CREDS"
      - "traefik.http.services.nginx.loadbalancer.server.port=81"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - /datos/downloads:/downloads:ro
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - /datos/log/nginx:/var/log/nginx

  netdata:
    image: netdata/netdata
    hostname: $NETDATA_DOMAIN
    container_name: netdata
    expose:
      - 19999
    networks:
      - traefik_proxy
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netdata.rule=Host(`$NETDATA_DOMAIN`)"
      - "traefik.http.routers.netdata.entrypoints=https"
      - "traefik.http.routers.netdata.tls=true"
      - "traefik.http.routers.netdata.tls.options=default"
      - "traefik.http.routers.netdata.tls.certresolver=letsencrypt"
      - "traefik.http.routers.netdata.middlewares=securityheaders"
      - "traefik.http.services.netdata.loadbalancer.server.port=19999"
      - "traefik.http.routers.netdata.middlewares=authmonit"
      - "traefik.http.middlewares.authmonit.basicauth.users=$NETDATA_CREDS"
      - "traefik.docker.network=traefik_proxy"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro


networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  internal:
    external:
      name: internal
